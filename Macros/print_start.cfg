[respond]

# !!! WARNING: MUST ENABLE HEATED BUILD VOLUME IN CURA MACHINE SETTINGS
# CURA print_start code:
# PRINT_START BED={material_bed_temperature_layer_0} HOTEND={material_print_temperature_layer_0} CHAMBER={build_volume_temperature}
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bed_temp = params.BED|int %}
    {% set hotend_temp = params.HOTEND|int %}
    {% set chamber_temp = params.CHAMBER|default(0)|int %}

    # Force the caselight on
    SET_PIN PIN=caselight VALUE=1

    RESPOND MSG="PRINT_START requests the following temps:"
    RESPOND PREFIX=HOTEND: MSG={hotend_temp}
    RESPOND PREFIX=BED: MSG={bed_temp}
    RESPOND PREFIX=CHAMBER: MSG={chamber_temp}

    # Code
    G28                   ; initial home if not already homed
    G90                     ; absolute positioning
    G1 Z60 F1500            ; drop bed for safety/access

    M104 S150               ;set extruder temperature without waiting and without dripping
    M140 S{bed_temp}        ;set bed temperature without waiting

    SET_HEATER_TEMPERATURE HEATER=hot TARGET={chamber_temp}                 ; set chamber temp
    TEMPERATURE_WAIT SENSOR="heater_generic hot" MINIMUM={chamber_temp-1}   ; wait for chamber temp to get close - no need for exactness here
    SET_HEATER_TEMPERATURE HEATER=hot TARGET={chamber_temp}                 ; set it back just in case

    M190 S{bed_temp}        ; set bed temperature and wait just in case
    G4 P5000                ; pause 5 seconds to stabilize bed temp

    G28 Z

    BED_MESH_CLEAR
    BED_MESH_CALIBRATE PROFILE=AUTOGEN

    #M106 P3 S255            ; turn on charcoal filter fan
    M109 S{hotend_temp}     ; set extruder temperature and wait

    G28 Z                   ; final z home

    SET_IDLE_TIMEOUT TIMEOUT=7200  ; set timeout to 2 hours for printing only
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
    SET_PIN PIN=caselight VALUE=1
    #LINE_PURGE              ; print purge line using KAMP

# CURA print_end code:
# PRINT_END
# 
# CURA optional print_end code to automatically drop the bed to a % of the max_z:
# PRINT_END PRESENT=0.90
[gcode_macro PRINT_END]
gcode:
    # Parameters
    {% set presentation_height = params.PRESENT|default(0.70)|float %}

    # Code
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing

    M106 P2 S0
    M106 P0 S0
    M106 P3 S0  #关闭活性炭风扇
    
    M104 S0
    M140 S0
    M141 S0

    M220 S100
    M221 S100

    M107                           ; turn off fan

    M106 P3 S192                   ; turn on charcoal filter fan
    UPDATE_DELAYED_GCODE ID=AUTO_FAN_OFF DURATION=600 ; turn fan back off after 10 minutes

    #   Present the printed part(s)
    {% if printer.toolhead.position.z > (max_z * presentation_height) %}
        {% set presentation_z = printer.toolhead.position.z %}
    {% else %}
        {% set presentation_z = max_z * presentation_height %}
    {% endif %}

    G90                                                 ; absolute positioning
    G0 X{max_x/2} Y{max_y-100} Z{presentation_z} F6000  ; park nozzle centered, but far enough forwards to clear the rear housing when homing

    BED_MESH_CLEAR
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0

    M84

    G31
    BEEP I=2 DUR=500

[delayed_gcode AUTO_FAN_OFF]
gcode:
    M106 P3 S0          ; stop post-print fan

[gcode_macro PRINT_END_POWEROFF]
gcode:
       M107
       M104 S0
       M140 S0
       G28 Z
       M84
#       BEEP I=2 DUR=500
       M81	

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% if (printer.gcode_move.position.z) < 200 %}       ; check that zhop doesn't exceed z max
        G1 Z200 F600                                         
    {% endif %}

    G1  X0 Y0 F12000

    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(50)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
#       SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0                                             ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F600                                                                     ; raise Z up by z hop amount
        {% else %}
#            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        SAVE_GCODE_STATE NAME=PAUSEPARK2
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
        
        SET_STEPPER_ENABLE STEPPER=extruder enable=0
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
#        SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=150                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1  E{e} F900                                                ; prime nozzle by E, lower Z back down
#        {% else %}                      
#            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}  
        RESTORE_GCODE_STATE NAME=PAUSEPARK2 MOVE=1 MOVE_SPEED=150                           
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=10                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[pause_resume] 

[gcode_macro HOT_CALIBRATE_START]
variable_k: 0
gcode:
#    {% if k == 0 %}
 #       {% if printer['heater_generic hot'].temperature > 44 %}
 #           SET_GCODE_VARIABLE MACRO=HOT_CALIBRATE_END VARIABLE=hot_set VALUE=1
 #           SET_GCODE_OFFSET Z_ADJUST=-0.10 MOVE=0
 #           SET_GCODE_VARIABLE MACRO=HOT_CALIBRATE_START VARIABLE=k VALUE=1
 #       {% endif %}
#    {% endif %}

[gcode_macro HOT_CALIBRATE_END]
variable_hot_set: 0
gcode:
 #   {% if  hot_set == 1 %}
 #       SET_GCODE_VARIABLE MACRO=HOT_CALIBRATE_END VARIABLE=hot_set VALUE=0
  #      SET_GCODE_OFFSET Z_ADJUST=+0.10 MOVE=0
 #       SET_GCODE_VARIABLE MACRO=HOT_CALIBRATE_START VARIABLE=k VALUE=0
 #   {% endif %}

[gcode_macro PRINT_START_QD]
gcode:
    #HOT_CALIBRATE_START